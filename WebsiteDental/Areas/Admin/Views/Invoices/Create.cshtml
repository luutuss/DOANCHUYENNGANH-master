@model WebsiteDental.Models.Invoice
@{
    ViewData["Title"] = "Tạo mới hóa đơn";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background-color: white;
    }

    .content-wrapper {
        margin-left: 230px;
        padding: 15px 20px 0 20px;
    }

    .page-intro {
        margin-bottom: 5px;
    }

        .page-intro h4 {
            margin-top: 0;
            margin-bottom: 5px;
        }

        .page-intro p {
            margin-bottom: 10px;
        }

    .form-container {
        background-color: white;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        padding: 20px;
        margin-bottom: 20px;
    }

    .form-title {
        color: #1a3b5d;
        font-weight: 600;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 1px solid #e0e0e0;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .control-label {
        font-weight: 500;
        color: #495057;
        margin-bottom: 5px;
        display: block;
    }

    .form-control {
        width: 100%;
        padding: 8px 12px;
        border: 1px solid #ced4da;
        border-radius: 4px;
    }

        .form-control:focus {
            border-color: #1a3b5d;
            box-shadow: 0 0 0 0.2rem rgba(26, 59, 93, 0.25);
        }

    .text-danger {
        color: #dc3545;
        font-size: 12px;
        margin-top: 5px;
        display: block;
    }

    .btn-primary {
        background-color: #1a3b5d;
        border-color: #1a3b5d;
        color: white;
        padding: 8px 16px;
        font-size: 14px;
        border-radius: 4px;
    }

        .btn-primary:hover {
            background-color: #2c5282;
            border-color: #2c5282;
        }

    .btn-danger {
        color: white;
    }

    .btn-secondary {
        margin-right: 10px;
    }

    .summary-section {
        background-color: #f8f9fa;
        border-radius: 5px;
        padding: 15px;
        margin-top: 15px;
        border: 1px solid #e0e0e0;
    }

    .summary-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
        padding-bottom: 5px;
        border-bottom: 1px dashed #e0e0e0;
    }

        .summary-row:last-child {
            border-bottom: none;
            font-weight: bold;
        }

    .shipping-options {
        margin-top: 15px;
        padding: 10px;
        background-color: #f0f7ff;
        border-radius: 5px;
        border: 1px solid #cce5ff;
    }

    .shipping-option {
        margin-bottom: 10px;
        padding: 8px;
        border-radius: 4px;
        cursor: pointer;
        border: 1px solid transparent;
    }

        .shipping-option:hover {
            background-color: #e6f2ff;
        }

        .shipping-option.selected {
            background-color: #e6f2ff;
            border-color: #1a3b5d;
        }

    .shipping-price {
        font-weight: bold;
        float: right;
    }

    @@media(max - width: 992px) {
            .content-wrapper {
                margin-left: 0;
                padding: 10px;
            }
        }
    </style>

    <div class="content-wrapper">
        <div class="page-intro">
            <h4>Tạo đơn hàng mới</h4>
            <p>Nhập thông tin chi tiết để tạo hóa đơn mới cho bệnh nhân.</p>
        </div>

        <div class="form-container">
            <form asp-action="Create" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label class="control-label">Tên người tạo đơn</label>
                    <input name="Username" class="form-control" placeholder="Nhập tên người dùng..." />
                </div>

                <div class="form-group">
                    <label class="control-label">Số điện thoại</label>
                    <input name="Phone" class="form-control" placeholder="Nhập số điện thoại..." />
                </div>

                <div class="form-group">
                    <label class="control-label">Email</label>
                    <input name="Email" class="form-control" placeholder="Nhập email..." />
                </div>

                <div class="form-group">
                    <label class="control-label">Địa chỉ</label>
                    <input name="Address" class="form-control" placeholder="Nhập địa chỉ người dùng..." />
                </div>

                <div class="form-group">
                    <label>Sản phẩm</label>
                    <table class="table" id="productTable">
                        <thead>
                            <tr>
                                <th>Sản phẩm</th>
                                <th>Số lượng</th>
                                <th>Đơn giá</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    <select name="InvoiceDetails[0].ProductId" class="form-control product-select">
                                        @foreach (var product in (SelectList)ViewBag.Products)
                                        {
                                            <option value="@product.Value">@product.Text</option>
                                        }
                                    </select>
                                </td>
                                <td>
                                    <input name="InvoiceDetails[0].Quantity" type="number" class="form-control quantity" value="1" min="1" />
                                </td>
                                <td>
                                    <input name="InvoiceDetails[0].UnitPrice" type="number" class="form-control unit-price" value="0" readonly />
                                </td>
                                <td>
                                    <button type="button" class="btn btn-danger btn-remove">X</button>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <button type="button" id="addRow" class="btn btn-secondary">+ Thêm sản phẩm</button>
                    <button type="button" id="calculateTotal" class="btn btn-success">= Tính tiền</button>
                </div>

                <!-- PHẦN PHÍ VẬN CHUYỂN -->
                <div class="form-group shipping-options">
                    <label><strong>Phương thức vận chuyển</strong></label>
                    <div class="shipping-option selected" data-price="30000">
                        <input type="radio" name="ShippingMethod" value="standard" checked />
                        <span>Giao hàng tiêu chuẩn (2-3 ngày)</span>
                        <span class="shipping-price">30,000 đ</span>
                    </div>
                    <div class="shipping-option" data-price="50000">
                        <input type="radio" name="ShippingMethod" value="express" />
                        <span>Giao hàng nhanh (1-2 ngày)</span>
                        <span class="shipping-price">50,000 đ</span>
                    </div>
                    <div class="shipping-option" data-price="100000">
                        <input type="radio" name="ShippingMethod" value="same-day" />
                        <span>Giao hàng trong ngày</span>
                        <span class="shipping-price">100,000 đ</span>
                    </div>
                    <input type="hidden" name="ShippingFee" id="shippingFee" value="30000" />
                </div>

                <!-- PHẦN TỔNG KẾT -->
                <div class="summary-section">
                    <div class="summary-row">
                        <span>Tạm tính:</span>
                        <span id="subtotal">0 đ</span>
                    </div>
                    <div class="summary-row">
                        <span>Phí vận chuyển:</span>
                        <span id="shipping-display">30,000 đ</span>
                    </div>
                    <div class="summary-row">
                        <span>Tổng cộng:</span>
                        <span id="grandTotal">30,000 đ</span>
                    </div>
                    <input type="hidden" id="totalAmount" name="TotalAmount" value="30000" />
                </div>

                <div class="form-group">
                    <label asp-for="IssueDate" class="control-label">Ngày phát hành</label>
                    <input asp-for="IssueDate" class="form-control" type="date" />
                    <span asp-validation-for="IssueDate" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <div class="radio">
                        <label>
                            <input type="radio" asp-for="IsPaid" value="true" /> Đã thanh toán
                        </label>
                    </div>
                    <div class="radio">
                        <label>
                            <input type="radio" asp-for="IsPaid" value="false" /> Chưa thanh toán
                        </label>
                    </div>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary">
                        <i class="fa fa-save"></i> TẠO ĐƠN HÀNG
                    </button>
                </div>
            </form>
        </div>

        <a asp-action="Index" class="back-link">
            <i class="fa fa-arrow-left"></i> Quay lại danh sách
        </a>
    </div>

    @section Scripts {
        <script>
            // Thiết lập ngày mặc định
            document.addEventListener('DOMContentLoaded', function () {
                var today = new Date().toISOString().split('T')[0];
                document.querySelector('input[type="date"]').value = today;

                // Kích hoạt tùy chọn vận chuyển mặc định
                updateShippingSelection(document.querySelector('.shipping-option'));
            });

            let rowIndex = 1;

            // Thêm dòng
            document.getElementById("addRow").addEventListener("click", function () {
                const table = document.getElementById("productTable").querySelector("tbody");
                const newRow = table.rows[0].cloneNode(true);

                newRow.querySelectorAll("select, input").forEach(function (element) {
                    if (element.name.includes("ProductId")) {
                        element.name = `InvoiceDetails[${rowIndex}].ProductId`;
                    }
                    if (element.name.includes("Quantity")) {
                        element.name = `InvoiceDetails[${rowIndex}].Quantity`;
                        element.value = 1;
                    }
                    if (element.name.includes("UnitPrice")) {
                        element.name = `InvoiceDetails[${rowIndex}].UnitPrice`;
                        element.value = 0;
                    }
                });

                table.appendChild(newRow);
                rowIndex++;
            });

            // Xóa dòng
            document.addEventListener("click", function (e) {
                if (e.target.classList.contains("btn-remove")) {
                    const row = e.target.closest("tr");
                    const table = row.closest("tbody");
                    if (table.rows.length > 1) {
                        row.remove();
                    }
                }
            });

            // Cập nhật đơn giá theo sản phẩm
            document.addEventListener("change", function (e) {
                if (e.target.classList.contains("product-select")) {
                    const productId = e.target.value;
                    const productPrices = @Html.Raw(Json.Serialize(ViewBag.ProductPrices));
                    const unitPrice = productPrices[productId] || 0;
                    const row = e.target.closest("tr");
                    row.querySelector(".unit-price").value = unitPrice;
                }

                // Xử lý khi thay đổi phương thức vận chuyển
                if (e.target.name === "ShippingMethod") {
                    updateShippingSelection(e.target.closest('.shipping-option'));
                    calculateFinalTotal();
                }
            });

            // Chọn phương thức vận chuyển
            document.querySelectorAll('.shipping-option').forEach(function(option) {
                option.addEventListener('click', function() {
                    // Chọn radio button trong option này
                    const radio = this.querySelector('input[type="radio"]');
                    radio.checked = true;

                    updateShippingSelection(this);
                    calculateFinalTotal();
                });
            });

            function updateShippingSelection(selectedOption) {
                // Bỏ chọn tất cả các option
                document.querySelectorAll('.shipping-option').forEach(function(option) {
                    option.classList.remove('selected');
                });

                // Chọn option hiện tại
                selectedOption.classList.add('selected');

                // Cập nhật giá trị phí vận chuyển
                const shippingPrice = selectedOption.getAttribute('data-price');
                document.getElementById('shippingFee').value = shippingPrice;
                document.getElementById('shipping-display').textContent = parseInt(shippingPrice).toLocaleString('vi-VN') + ' đ';
            }

            // Tính tổng tiền sản phẩm
            function calculateSubtotal() {
                let subtotal = 0;
                document.querySelectorAll("#productTable tbody tr").forEach(function (row) {
                    const quantity = parseInt(row.querySelector(".quantity").value) || 0;
                    const price = parseFloat(row.querySelector(".unit-price").value) || 0;
                    subtotal += quantity * price;
                });
                return subtotal;
            }

            // Tính tổng tiền cuối cùng (bao gồm phí vận chuyển)
            function calculateFinalTotal() {
                const subtotal = calculateSubtotal();
                const shippingFee = parseInt(document.getElementById('shippingFee').value) || 0;
                const grandTotal = subtotal + shippingFee;

                // Cập nhật hiển thị
                document.getElementById('subtotal').textContent = subtotal.toLocaleString('vi-VN') + ' đ';
                document.getElementById('grandTotal').textContent = grandTotal.toLocaleString('vi-VN') + ' đ';
                document.getElementById('totalAmount').value = grandTotal;

                return grandTotal;
            }

            // Tính tổng tiền khi nhấn nút
            document.getElementById("calculateTotal").addEventListener("click", function () {
                calculateFinalTotal();
            });

            // Theo dõi thay đổi số lượng để tính lại tổng tiền
            document.addEventListener("change", function(e) {
                if (e.target.classList.contains("quantity")) {
                    calculateFinalTotal();
                }
            });
        </script>
    }